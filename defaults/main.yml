---
# General parameters #
haproxy_is_install: false # A boolean to determine whether or not to install the HaProxy.
haproxy_version: '28' # Specify the HaProxy version.

# Listen port #
haproxy_port_arg:
  haproxy_exporter: '9101' # HaProxy Exporter network communication port.
  keepalived_exporter: '9650' # Keepalived exporter network communication port.
  stats: '10089' # The HaProxy stats page port.

# Log Variables #
#haproxy_syslog_server: ["127.0.0.1"] # Defines the address list of a syslog server.
#haproxy_syslog_port: '1514' # Defines the input port of a syslog server for access log.

# KeepAlived Variables #
haproxy_keepalived_dept: false # A boolean value, whether provides High-Availability.
haproxy_keepalived_vip: '10.10.10.10' # Virtual IP address.

# System Variables #
haproxy_arg:
  maxconn: '4000' # The maximum per-process number of concurrent connections.
  retries: '3' # The number of retries to perform on a server after a connection failure.
  timeout_http_request: '30s' # The maximum allowed time to wait for a complete HTTP request.
  timeout_queue: '30s' # The maximum time to wait in the queue for a connection slot to be free.
  timeout_connect: '30s' # The maximum time to wait for a connection attempt to a server to succeed.
  timeout_client: '30s' # The inactivity timeout on the client side for half-closed connections.
  timeout_server: '30s' # The maximum inactivity time on the server side.
  timeout_tunnel: '30s' # Set the maximum inactivity time on the client and server side for tunnels.
  timeout_client_fin: '30s' # The inactivity timeout applies when the client is shut down.
  timeout_http_keep_alive: '30s' # The maximum allowed time to wait for a new HTTP request to appear.
  timeout_check: '30s' # Global Check timeout.
  options: # Global Server options.
    - 'httplog'
    - 'dontlognull'
    - 'http-server-close'
    - 'forwardfor except 127.0.0.0/8'
    - 'redispatch'

# Proxys Variables #
#haproxy_proxy_args: # Essential configuration sections.
#  - name: 'k8s-api'
#    port: '16443'
#    syntax:
#      - "frontend k8s-api"
#      - "  bind 0.0.0.0:16443"
#      - "  mode tcp"
#      - "  option tcplog"
#      - "  default_backend k8s-api"
#      - "backend k8s-api"
#      - "  mode tcp"
#      - "  option tcp-check"
#      - "  balance roundrobin"
#      - "  default-server inter 10s downinter 5s rise 2 fall 2 slowstart 60s maxconn 250 maxqueue 256 weight 100"
#      - "  server k8s-api-1 192.168.0.147:6443 check"
#  - name: 'https-in'
#    port: '443'
#    syntax:
#      - "frontend https-in"
#      - "  bind 0.0.0.0:443 ssl crt /etc/haproxy/ssl/certificate.pem"
#      - "  reqirep ^(accept:\\ .*)(,)(.*) \\1,\\3"
#      - "  use_backend kibana if { path /kibana } or { path_beg /kibana/ }"
#      - "  use_backend grafana if { path /grafana } or { path_beg /grafana/ }"
#      - "backend grafana"
#      - "  http-request set-path %[path,regsub(^/grafana/?,/)]"
#      - "  balance source"
#      - "  default-server inter 10s downinter 5s rise 2 fall 2 slowstart 60s maxconn 2048 maxqueue 2048 weight 1"
#      - "  server grafana 192.168.0.168:3000 check"
#      - "backend kibana"
#      - "  reqirep ^(accept:\\ .*)(,)(.*) \\1,\\3"
#      - "  balance source"
#      - "  default-server inter 10s downinter 5s rise 2 fall 2 slowstart 60s maxconn 2048 maxqueue 2048 weight 1"
#      - "  server kibana 192.168.0.168:5601 check"

# Service Mesh #
environments: 'prd' # Define the service environment.
datacenter: 'dc01' # Define the DataCenter.
domain: 'local' # Define the Domain.
customer: 'demo' # Define the customer name.
#tags: # Define the service custom label.
#  subscription: 'default'
#  owner: 'nobody'
#  department: 'Infrastructure'
#  organization: 'The Company'
#  region: 'China'
exporter_is_install: false # Whether to install prometheus exporter.
consul_public_register: false # Whether register a exporter service with public consul client.
consul_public_exporter_token: '00000000-0000-0000-0000-000000000000' # Public Consul client ACL token.
consul_public_http_prot: 'https' # The consul Hypertext Transfer Protocol.
consul_public_http_port: '8500' # The consul HTTP API port.
consul_public_clients: # List of public consul clients.
  - '127.0.0.1'
